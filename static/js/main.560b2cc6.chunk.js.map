{"version":3,"sources":["Portfolio/Themes/lightTheme.js","Portfolio/Themes/darkTheme.js","Portfolio/Context/index.js","Portfolio/Components/CustomBackdrop/index.js","Portfolio/Constants/index.js","Portfolio/Components/Nav/index.js","Portfolio/Components/Home/index.js","Portfolio/Components/About/index.js","Portfolio/Components/Projects/Project.js","Portfolio/Components/Projects/index.js","Portfolio/Components/Contact/index.js","Portfolio/Components/Footer/index.js","Portfolio/App.jsx","Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["palette","background","defaultLight","default","defaultDark","circularGradient","bottomUpGradient","topDownGradient","primary","light","lightBlue","main","blue","mainShadow","dark","indigo","secondary","amber","text","hint","grey","Context","React","createContext","CustomBackdrop","withStyles","root","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","invisible","Backdrop","RESOLUTIONS","VIEW1","WIDTH","HEIGHT","VIEW2","THEMES","TABS","useStyles","makeStyles","theme","navbar","tabItem","fontFamily","fontSize","color","themeIcon","marginRight","menuIcon","transform","menuItem","animation","Home","context","useContext","classes","useState","menuOpen","setMenuOpen","menuItems","handleMenuClick","handleThemeChange","switchUITheme","handleMenuItemClick","newValue","changeView","useEffect","mobileView","Fragment","IconButton","className","onClick","Modal","open","BackdropComponent","style","border","Grid","container","spacing","direction","justify","height","item","List","component","map","index","ListItem","key","button","ListItemText","primaryTypographyProps","align","variant","gutterBottom","uiTheme","toUpperCase","AppBar","elevation","Tabs","centered","value","indexOf","view","onChange","event","indicatorColor","Tab","label","Tooltip","title","CONSTANTS","computeNameSubTextSize","windowWidth","homePaper","nameCard","name","props","typography","caption","textAlign","fontWeight","textShadow","content","marginTop","marginBottom","windowSize","width","Paper","square","xs","lg","Card","CardContent","aboutPaper","overflowY","mobileViewHeader","About","Toolbar","Typography","Container","Link","href","target","rel","project","subProjectsList","icon","subProjectIcon","technologyChip","technologyChipIcon","Project","styleProps","openLinkInNewTab","link","window","getTechnologyIcon","technology","getHeaderLinks","accessLink","size","githubLink","gitlabLink","CardHeader","action","titleTypographyProps","desc","type","minHeight","maxHeight","overflowX","dense","collection","subProject","ListItemIcon","getSubProjectIcon","ListItemSecondaryAction","length","Divider","CardActions","technologies","Chip","projectsPaper","Projects","data","projects","contactPaper","Contact","footer","transition","Footer","accounts","github","stackOverflow","linkedIn","app","App","id","Nav","Portfolio","changeUITheme","innerWidth","innerHeight","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","setMobileView","dt","Date","getHours","ThemeProvider","currentTheme","lightTheme","darkTheme","createMuiTheme","getCurrentTheme","Provider","nextTheme","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.560b2cc6.chunk.js","sourcesContent":["import {\n  amber,\n  blue,\n  indigo,\n  lightBlue,\n} from '@material-ui/core/colors'\n\nexport default {\n  palette: {\n    background: {\n      defaultLight    : '#ffffff',\n      default         : '#f2f2f2',\n      defaultDark     : '#e6e6e6',\n      circularGradient: `radial-gradient(circle at center, #f2f2f2 1%, #e6e6e6 550%)`,\n      bottomUpGradient: `linear-gradient(transparent 10%, #f2f2f2 50%, #e6e6e6 100%)`,\n      topDownGradient : `linear-gradient(#e6e6e6 30%, #f2f2f2 120%, transparent 100%)`,\n    },\n    primary: {\n      light     : lightBlue[900],\n      main      : blue[900],\n      mainShadow: blue[100],\n      dark      : indigo[900],\n    },\n    secondary: {\n      light: amber[700],\n      main : amber[800],\n      dark : amber[900],\n    },\n    text: {\n      primary: '#000000',\n      hint   : '#000000E6',\n    },\n  },\n};","import {\n  amber,\n  grey,\n  lightBlue,\n} from '@material-ui/core/colors'\n\nexport default {\n  palette: {\n    background: {\n      defaultLight    : grey[900],\n      default         : '#1a1a1a',\n      defaultDark     : '#0d0d0d',\n      circularGradient: `radial-gradient(circle at center, #1a1a1a 1%, #0d0d0d 550%)`,\n      bottomUpGradient: `linear-gradient(transparent 10%, #1a1a1a 50%, #0d0d0d 100%)`,\n      topDownGradient : `linear-gradient(#0d0d0d 30%, #1a1a1a 120%, transparent 100%)`,\n    },\n    primary: {\n      light     : lightBlue[500],\n      main      : lightBlue[500],\n      mainShadow: lightBlue[900],\n      dark      : lightBlue[600],\n    },\n    secondary: {\n      light: amber[200],\n      main : amber[300],\n      dark : amber[400],\n    },\n    text: {\n      primary: '#ffffff',\n      hint   : '#ffffffE6',\n    },\n  },\n};","import React from 'react';\n\nconst Context = React.createContext(null);\n\nexport default Context;","import { Backdrop } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CustomBackdrop = withStyles({\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.95)',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  invisible: {\n    backgroundColor: 'transparent',\n  },\n})(Backdrop);\n\nexport default CustomBackdrop;","export const RESOLUTIONS = {\n  DESKTOP: {\n    VIEW1: {\n      WIDTH: 1920,\n      HEIGHT: 1080,\n    },\n    VIEW2: {\n      WIDTH: 1366,\n      HEIGHT: 768,\n    },\n  },\n  MOBILE: {\n    VIEW1: {\n      WIDTH: 360,\n      HEIGHT: 640,\n    },\n  },\n}\n\nexport const THEMES = {\n  LIGHT: 'LIGHT',\n  DARK : 'DARK',\n};\n\nexport const TABS = {\n  HOME    : 'HOME',\n  ABOUT   : 'ABOUT',\n  PROJECTS: 'PROJECTS',\n  CONTACT : 'CONTACT',\n};","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n  Tab,\n  Tabs,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BiMenu as MenuIcon } from 'react-icons/bi';\nimport { AiOutlineClose as CloseIcon } from 'react-icons/ai';\nimport {\n  BsBrightnessHigh as LightThemeIcon,\n  BsBrightnessHighFill as DarkThemeIcon,\n} from 'react-icons/bs';\n\nimport Context from '../../Context';\nimport CustomBackdrop from '../CustomBackdrop';\nimport * as CONSTANTS from '../../Constants';\n\nconst useStyles = makeStyles((theme) => ({\n  navbar: {\n    background: theme.palette.background.topDownGradient,\n  },\n  tabItem: {\n    fontFamily: '\"Exo 2\"',\n    fontSize: '20px',\n    color: theme.palette.text.hint,\n  },\n  themeIcon: {\n    position: 'absolute',\n    right: 0,\n    marginRight: 5,\n    color: theme.palette.text.primary,\n  },\n  menuIcon: {\n    position: 'fixed',\n    top: '10px',\n    left: '10px',\n    zIndex: 1200,\n  },\n  '@keyframes loadMenu': {\n    '0%': {\n      transform: 'scale(0.6)',\n    },\n    '25%': {\n      transform: 'scale(0.7)',\n    },\n    '50%': {\n      transform: 'scale(0.8)',\n    },\n    '75%': {\n      transform: 'scale(0.9)',\n    },\n    '100%': {\n      transform: 'scale(1)',\n    },\n  },\n  menuItem: {\n    animation: '$loadMenu 100ms',\n    color: 'white',\n  },\n}));\n\nfunction Home() {\n  const context = useContext(Context);\n  const classes = useStyles();\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const menuItems = ['HOME', 'ABOUT', 'PROJECTS', 'CONTACT'];\n\n  const handleTabChange = (event, newValue) => {\n    context.changeView(menuItems[newValue]);\n  };\n\n  const handleMenuClick = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleThemeChange = () => {\n    context.switchUITheme();\n  };\n\n  const handleMenuItemClick = (newValue) => {\n    if (newValue === 'theme') {\n      handleThemeChange();\n      return;\n    }\n    context.changeView(menuItems[newValue]);\n    setMenuOpen(false);\n  };\n\n  useEffect(() => {\n    if (!context.mobileView && menuOpen) {\n      setMenuOpen(false);\n    }\n  }, [context.mobileView, menuOpen]);\n\n  if (!context.mobileView) {\n    return (\n      <AppBar position=\"sticky\" elevation={0} className={classes.navbar}>\n        <Tabs\n          centered\n          value={menuItems.indexOf(context.view)}\n          onChange={handleTabChange}\n          indicatorColor=\"secondary\"\n        >\n          {menuItems.map((menuItem) => (\n            <Tab\n              key={menuItem}\n              label={menuItem}\n              className={classes.tabItem}\n            />\n          ))}\n        </Tabs>\n        <Tooltip title=\"Switch theme\">\n          <IconButton\n            onClick={handleThemeChange}\n            className={classes.themeIcon}\n          >\n            {context.uiTheme === CONSTANTS.THEMES.LIGHT && <LightThemeIcon />}\n            {context.uiTheme === CONSTANTS.THEMES.DARK && <DarkThemeIcon />}\n          </IconButton>\n        </Tooltip>\n      </AppBar>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        {!menuOpen && (\n          <IconButton\n            className={classes.menuIcon}\n            onClick={handleMenuClick}\n            color=\"primary\"\n          >\n            <MenuIcon />\n          </IconButton>\n        )}\n        <Modal\n          open={menuOpen}\n          BackdropComponent={CustomBackdrop}\n          style={{\n            border: '1px solid red',\n          }}\n        >\n          <React.Fragment>\n            <IconButton\n              className={classes.menuIcon}\n              onClick={handleMenuClick}\n              style={{\n                color: 'white',\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n            <Grid\n              container\n              spacing={0}\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style={{\n                height: '100vh',\n              }}\n            >\n              <Grid item>\n                <List component=\"nav\">\n                  {menuItems.map((menuItem, index) => (\n                    <ListItem\n                      key={menuItem}\n                      button\n                      alignItems=\"center\"\n                      onClick={() => handleMenuItemClick(index)}\n                    >\n                      <ListItemText\n                        primaryTypographyProps={{\n                          align: 'center',\n                          variant: 'h5',\n                          gutterBottom: true,\n                          style: {\n                            fontFamily: '\"Exo 2\"',\n                          },\n                        }}\n                        className={classes.menuItem}\n                      >\n                        {menuItem}\n                      </ListItemText>\n                    </ListItem>\n                  ))}\n                  <ListItem\n                    key=\"toggle-theme\"\n                    button\n                    alignItems=\"center\"\n                    onClick={() => handleMenuItemClick('theme')}\n                  >\n                    <ListItemText\n                      primary={'THEME - ' + context.uiTheme.toUpperCase()}\n                      primaryTypographyProps={{\n                        align: 'center',\n                        variant: 'h5',\n                        gutterBottom: true,\n                        style: {\n                          fontFamily: '\"Exo 2\"',\n                        },\n                      }}\n                      className={classes.menuItem}\n                    ></ListItemText>\n                  </ListItem>\n                </List>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Paper,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Context from '../../Context';\nimport { RESOLUTIONS } from '../../Constants';\n\nconst computeNameSize = (windowWidth) => {\n  if (windowWidth <= RESOLUTIONS.MOBILE.VIEW1.WIDTH) {\n    return '39px';\n  }\n  if (windowWidth <= RESOLUTIONS.DESKTOP.VIEW2.WIDTH) {\n    return '77px';\n  }\n  if (windowWidth >= RESOLUTIONS.DESKTOP.VIEW1.WIDTH) {\n    return '110px';\n  }\n  return '87px';\n};\n\nconst computeNameSubTextSize = (windowWidth) => {\n  if (windowWidth <= RESOLUTIONS.MOBILE.VIEW1.WIDTH) {\n    return '16px';\n  }\n  if (windowWidth <= RESOLUTIONS.DESKTOP.VIEW2.WIDTH) {\n    return '20px';\n  }\n  return '28px';\n};\n\nconst useStyles = makeStyles(theme => ({\n  '@keyframes loadPrefix': {\n    '0%': {\n      transform: 'translateX(-100%)',\n    },\n  },\n  '@keyframes loadSuffix': {\n    '0%': {\n      transform: 'translateX(100%)',\n    },\n  },\n  homePaper: {\n    height: '100%',\n    backgroundColor: 'transparent',\n  },\n  nameCard: {\n    backgroundColor: 'transparent',\n  },\n  name: props => ({\n    ...theme.typography.caption,\n    color: theme.palette.primary.main,\n    textAlign: 'center',\n    fontSize: computeNameSize(props.windowWidth),\n    fontWeight: 'bold',\n    fontFamily: '\"Exo 2\", sans-serif',\n    textShadow: `+2px +2px 8px ${theme.palette.primary.mainShadow},\\\n                -2px +2px 8px ${theme.palette.primary.mainShadow},\\\n                -2px -2px 8px ${theme.palette.primary.mainShadow},\\\n                +2px -2px 8px ${theme.palette.primary.mainShadow}`,\n    position: 'relative',\n    '&::before': {\n      content: '\"I\\'M\"',\n      display: 'block',\n      position: 'absolute',\n      fontSize: computeNameSubTextSize(props.windowWidth),\n      fontWeight: 'normal',\n      top: 0,\n      left: 0,\n      marginTop: '-32px',\n      // animation: '$loadPrefix 1s',\n    },\n    '&::after': {\n      content: '\"A SOFTWARE ENGINEER\"',\n      display: 'block',\n      position: 'absolute',\n      fontSize: computeNameSubTextSize(props.windowWidth),\n      fontWeight: 'normal',\n      right: 0,\n      bottom: 0,\n      marginBottom: '-32px',\n      // animation: '$loadSuffix 1s',\n    },\n  }),\n}));\n\nfunction Home(props) {\n  const context = useContext(Context);\n  const classes = useStyles({ windowWidth: context.windowSize.width });\n  return (\n    <Paper className={classes.homePaper} square>\n      <Grid\n        container\n        spacing={0}\n        direction='column'\n        justify='center'\n        style={{\n          height: '100%',\n        }}\n      >\n        <Grid item>\n          <Grid container>\n            <Grid item xs={false} lg={3}></Grid>\n            <Grid item xs={12} lg={6}>\n              <Card elevation={0} className={classes.nameCard}>\n                <CardContent>\n                  <h1 className={classes.name}>\n                    SREEKAR MOULI\n                  </h1>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={false} lg={3}></Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport {\n  AppBar,\n  Container,\n  Link,\n  Paper,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Context from '../../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  aboutPaper: {\n    height: '100%',\n    backgroundColor: 'transparent',\n    overflowY: 'scroll',\n  },\n  mobileViewHeader: {\n    backgroundColor: `${theme.palette.background.default}E6`,\n  }\n}));\n\nfunction About() {\n  const context = useContext(Context);\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.aboutPaper} square>\n      <React.Fragment>\n        <Toolbar />\n        {context.mobileView && (\n          <AppBar\n            position=\"sticky\"\n            elevation={0}\n            className={classes.mobileViewHeader}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              align=\"center\"\n              style={{\n                fontFamily: '\"Exo 2\"',\n              }}\n            >\n              ABOUT\n            </Typography>\n            <br />\n          </AppBar>\n        )}\n        <Toolbar />\n        <Container>\n          <Typography\n            color=\"textPrimary\"\n            style={{ fontFamily: '\"Noto Sans\"' }}\n            variant=\"h6\"\n            gutterBottom\n          >\n            Hi, I'm Sreekar Mouli.\n          </Typography>\n          <br />\n          <Typography\n            color=\"textPrimary\"\n            style={{ fontFamily: '\"Noto Sans\"' }}\n            variant=\"h6\"\n            gutterBottom\n          >\n            I'm an enthusiastic Software Developer currently working at{' '}\n            <Link\n              href=\"https://www.linkedin.com/company/kore-inc\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              color=\"primary\"\n            >\n              Kore.ai\n            </Link>{' '}\n            in Hyderabad, India. For the company, I have developed several\n            features like Digital Views, Digital Forms and have also build a new\n            Application called Workflows from scratch.\n          </Typography>\n          <br />\n          <Typography\n            color=\"textPrimary\"\n            style={{ fontFamily: '\"Noto Sans\"' }}\n            variant=\"h6\"\n            gutterBottom\n          >\n            As a kid, I was really interested in computers and technology in\n            general. I was really suprised when I came across programming. That\n            fact that you can build a software which does what you want it to do\n            really interests me. Since then, I have been building several\n            projects and learning new technologies.\n          </Typography>\n        </Container>\n      </React.Fragment>\n      <Toolbar />\n    </Paper>\n  );\n}\n\nexport default About;\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Chip,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Paper,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AiFillGithub as GithubIcon } from 'react-icons/ai';\nimport { MdOpenInNew as OpenIcon } from 'react-icons/md';\nimport {\n  SiJavascript as JSIcon,\n  SiNpm as NPMIcon,\n  SiPython as PyIcon,\n  SiDjango as DjangoIcon,\n  SiReact as ReactIcon,\n  SiMongodb as MongoDBIcon,\n  SiRedis as RedisIcon,\n  SiRabbitmq as RabbitMQIcon,\n  SiNginx as NginxIcon,\n  SiMysql as MySQLIcon,\n} from 'react-icons/si';\nimport { RiFileUnknowFill as UnknwownIcon } from 'react-icons/ri';\nimport { IoLogoGitlab as GitlabIcon } from 'react-icons/io5';\nimport { FaNodeJs as NodeJSIcon } from 'react-icons/fa';\nimport {\n  BsServer as BackendIcon,\n  BsArrowRightShort as RightArrowIcon,\n} from 'react-icons/bs';\nimport { CgWebsite as FrontendIcon } from 'react-icons/cg';\n\nimport Context from '../../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  project: (props) => ({\n    background: theme.palette.background.defaultDark,\n    color: theme.palette.text.primary,\n    ...(!props.mobileView && { height: '380px' }),\n  }),\n  subProjectsList: {\n    background: theme.palette.background.default,\n    color: theme.palette.text.primary,\n  },\n  icon: {\n    '&:hover': {\n      transform: 'scale(1.05)',\n    },\n  },\n  subProjectIcon: {\n    color: theme.palette.primary.main,\n    transform: 'scale(1.25)',\n  },\n  technologyChip: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n  },\n  technologyChipIcon: {\n    color: theme.palette.primary.main,\n  },\n}));\n\nfunction Project(props) {\n  const { project } = props;\n  const context = useContext(Context);\n  const styleProps = {\n    mobileView: context.mobileView,\n  };\n  const classes = useStyles(styleProps);\n\n  const openLinkInNewTab = (link) => window.open(link);\n\n  const getTechnologyIcon = (technology) => {\n    if (technology === 'JavaScript') {\n      return <JSIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'NPM') {\n      return <NPMIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'Python') {\n      return <PyIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'Django') {\n      return <DjangoIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'ReactJS') {\n      return <ReactIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'NodeJS') {\n      return <NodeJSIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'MongoDB') {\n      return <MongoDBIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'Redis') {\n      return <RedisIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'RabbitMQ') {\n      return <RabbitMQIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'Nginx') {\n      return <NginxIcon className={classes.technologyChipIcon} />;\n    } else if (technology === 'MySQL') {\n      return <MySQLIcon className={classes.technologyChipIcon} />;\n    } else {\n      return <UnknwownIcon className={classes.technologyChipIcon} />;\n    }\n  };\n\n  const getSubProjectIcon = (project) => {\n    if (project.type === 'backend') return <BackendIcon />;\n    if (project.type === 'frontend') return <FrontendIcon />;\n    return <RightArrowIcon />;\n  };\n\n  const getHeaderLinks = (project) => {\n    return (\n      <React.Fragment>\n        {project.accessLink && (\n          <Tooltip title=\"Open\">\n            <IconButton\n              className={classes.icon}\n              size=\"small\"\n              onClick={() => openLinkInNewTab(project.accessLink)}\n              color=\"primary\"\n            >\n              <OpenIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {project.githubLink && (\n          <Tooltip title=\"Github\">\n            <IconButton\n              className={classes.icon}\n              size=\"small\"\n              onClick={() => openLinkInNewTab(project.githubLink)}\n              color=\"primary\"\n            >\n              <GithubIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {project.gitlabLink && (\n          <Tooltip title=\"Gitlab\">\n            <IconButton\n              className={classes.icon}\n              size=\"small\"\n              onClick={() => openLinkInNewTab(project.gitlabLink)}\n              color=\"primary\"\n            >\n              <GitlabIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Card\n        className={classes.project}\n        elevation={2}\n        square\n      >\n        <CardHeader\n          title={project.name}\n          action={getHeaderLinks(project)}\n          titleTypographyProps={{\n            style: {\n              fontFamily: '\"Exo 2\"',\n            },\n          }}\n        />\n        <CardContent>\n          <Typography style={{ fontFamily: '\"Noto Sans\"' }}>\n            {project.desc}\n          </Typography>\n          {project.type === 'collection' && (\n            <Paper\n              style={{\n                minHeight: '80px',\n                maxHeight: '150px',\n                overflowY: 'scroll',\n                overflowX: 'hidden',\n                marginTop: 20,\n              }}\n              className={classes.subProjectsList}\n            >\n              <Container>\n                <List\n                  dense={context.mobileView}\n                >\n                  {project.collection.map((subProject, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <ListItemIcon className={classes.subProjectIcon}>\n                          {getSubProjectIcon(subProject)}\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={subProject.name}\n                          primaryTypographyProps={{\n                            style: {\n                              fontFamily: '\"Noto Sans\"',\n                            },\n                          }}\n                        />\n                        <ListItemSecondaryAction>\n                          {getHeaderLinks(subProject)}\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      {index !== project.collection.length - 1 && <Divider />}\n                    </React.Fragment>\n                  ))}\n                </List>\n              </Container>\n            </Paper>\n          )}\n        </CardContent>\n        <CardActions>\n          <Grid container spacing={1}>\n            {project.technologies.map((technology, index) => (\n              <Grid item key={index}>\n                {context.mobileView ? (\n                  <Tooltip title={technology}>\n                    <IconButton color=\"primary\" size=\"small\">\n                      {getTechnologyIcon(technology)}\n                    </IconButton>\n                  </Tooltip>\n                ) : (\n                  <Chip\n                    icon={getTechnologyIcon(technology)}\n                    label={technology}\n                    className={classes.technologyChip}\n                  />\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default Project;\n","import React, { useContext } from 'react';\nimport {\n  AppBar,\n  Container,\n  Grid,\n  Paper,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nimport data from '../../data.json';\nimport Project from './Project';\nimport Context from '../../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  projectsPaper: {\n    height: '100%',\n    backgroundColor: 'transparent',\n    overflowY: 'scroll',\n  },\n  mobileViewHeader: {\n    backgroundColor: `${theme.palette.background.default}E6`,\n  }\n}));\n\nfunction Projects() {\n  const context = useContext(Context);\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.projectsPaper} square>\n      {context.mobileView && (\n        <React.Fragment>\n          <Toolbar />\n          <AppBar\n            position=\"sticky\"\n            elevation={0}\n            className={classes.mobileViewHeader}\n          >\n            <Typography\n              variant=\"h4\"\n              align=\"center\"\n              style={{\n                fontFamily: '\"Exo 2\"',\n              }}\n              color='textPrimary'\n            >\n              PROJECTS\n            </Typography>\n            <br />\n          </AppBar>\n        </React.Fragment>\n      )}\n      <Container>\n        <Toolbar />\n        <Grid container spacing={3}>\n          {data.projects.map((project, index) => (\n            <Grid item key={index} xs={12} lg={4}>\n              <Project project={project} />\n            </Grid>\n          ))}\n        </Grid>\n        <Toolbar />\n        <Toolbar />\n      </Container>\n    </Paper>\n  );\n}\n\nexport default Projects;\n","import React, { useContext } from 'react';\nimport {\n  Container,\n  Grid,\n  Typography,\n  Link,\n  Toolbar,\n  Paper,\n  AppBar,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Context from '../../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  contactPaper: {\n    height: '100%',\n    backgroundColor: 'transparent',\n  },\n  mobileViewHeader: {\n    backgroundColor: `${theme.palette.background.default}E6`,\n  }\n}));\n\nfunction Contact() {\n  const context = useContext(Context);\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.contactPaper} square>\n      <React.Fragment>\n        <Toolbar />\n        {context.mobileView && (\n          <AppBar\n            position=\"sticky\"\n            elevation={0}\n            className={classes.mobileViewHeader}\n          >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h4\"\n              align=\"center\"\n              style={{\n                fontFamily: '\"Exo 2\"',\n              }}\n            >\n              CONTACT\n            </Typography>\n            <br />\n          </AppBar>\n        )}\n        <Container>\n          <Toolbar />\n          <Typography\n            color=\"textPrimary\"\n            style={{ fontFamily: '\"Noto Sans\"' }}\n            variant=\"h5\"\n            align=\"center\"\n            gutterBottom\n          >\n            You can reach out to me over my email.\n          </Typography>\n          <Toolbar />\n        </Container>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"space-evenly\"\n        >\n          <Grid item>\n            <Typography color=\"textPrimary\" variant=\"button\">\n              EMAIL\n            </Typography>\n            <hr />\n          </Grid>\n          <Grid item>\n            <Typography color=\"textPrimary\" variant=\"button\">\n              <Link color=\"primary\" href=\"mailto:sreekar.mouli1998@gmail.com\">\n                sreekar.mouli1998@gmail.com\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    </Paper>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport { AppBar, Grid, IconButton, Tooltip } from '@material-ui/core';\nimport {\n  RiGithubFill as GithubIcon,\n  RiStackOverflowLine as StackOverflowIcon,\n  RiLinkedinBoxFill as LinkedInIcon,\n} from 'react-icons/ri';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport data from '../../data.json';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    bottom: 0,\n    background: theme.palette.background.bottomUpGradient,\n  },\n  icon: {\n    transition: '100ms',\n    '&:hover': {\n      transform: 'scale(1.05)',\n    },\n  },\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n\n  const openLinkInNewTab = (link) => window.open(link);\n\n  return (\n    <AppBar position=\"sticky\" className={classes.footer}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Tooltip title=\"Github\">\n            <IconButton\n              className={classes.icon}\n              onClick={() => openLinkInNewTab(data.accounts.github)}\n              color=\"primary\"\n            >\n              <GithubIcon />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"Stack Overflow\">\n            <IconButton\n              className={classes.icon}\n              onClick={() => openLinkInNewTab(data.accounts.stackOverflow)}\n              color=\"primary\"\n            >\n              <StackOverflowIcon />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <Tooltip title=\"LinkedIn\">\n            <IconButton\n              className={classes.icon}\n              onClick={() => openLinkInNewTab(data.accounts.linkedIn)}\n              color=\"primary\"\n            >\n              <LinkedInIcon />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Nav, Home, About, Projects, Contact, Footer } from './Components';\nimport Context from './Context';\nimport * as CONSTANTS from './Constants';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    background: theme.palette.background.circularGradient,\n  },\n}));\n\nfunction App(props) {\n  const context = useContext(Context);\n  const classes = useStyles();\n  const view = context.view;\n\n  return (\n    <div id=\"app\" className={classes.app}>\n      <Nav />\n      {view === CONSTANTS.TABS.HOME && <Home />}\n      {view === CONSTANTS.TABS.ABOUT && <About />}\n      {view === CONSTANTS.TABS.PROJECTS && <Projects />}\n      {view === CONSTANTS.TABS.CONTACT && <Contact />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { lightTheme, darkTheme } from './Themes';\nimport Context from './Context';\nimport App from './App';\nimport * as CONSTANTS from './Constants';\n\nconst MAX_MOBILE_VIEW_WIDTH = 670;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width : window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width : window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nfunction Portfolio(props) {\n  const [uiTheme, changeUITheme] = useState(CONSTANTS.THEMES.LIGHT);\n  const [view, changeView] = useState(CONSTANTS.TABS.HOME);\n  const windowSize = useWindowSize();\n  const [mobileView, setMobileView] = useState(false);\n\n  const getCurrentTheme = () => {\n    let currentTheme;\n    if (uiTheme === CONSTANTS.THEMES.LIGHT)\n      currentTheme = lightTheme;\n    else if (uiTheme === CONSTANTS.THEMES.DARK)\n      currentTheme = darkTheme;\n    return createMuiTheme(currentTheme);\n  };\n\n  const switchUITheme = () => {\n    let nextTheme;\n    if (uiTheme === CONSTANTS.THEMES.LIGHT)\n      nextTheme = CONSTANTS.THEMES.DARK;\n    else if (uiTheme === CONSTANTS.THEMES.DARK)\n      nextTheme = CONSTANTS.THEMES.LIGHT;\n    return changeUITheme(nextTheme);\n  };\n\n  const onResize = () => {\n    setMobileView(windowSize.width <= MAX_MOBILE_VIEW_WIDTH);\n  };\n\n  useEffect(onResize, [windowSize]);\n\n  useEffect(() => {\n    let dt = new Date();\n    if (dt.getHours() >= 18 || dt.getHours() <= 7) {\n      changeUITheme(CONSTANTS.THEMES.DARK);\n    }\n  }, [])\n\n  return (\n    <ThemeProvider theme={getCurrentTheme()}>\n      <Context.Provider value={{\n        view,\n        changeView,\n        windowSize,\n        uiTheme,\n        switchUITheme,\n        mobileView,\n      }}>\n        <App />\n      </Context.Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default Portfolio;","import React from 'react';\nimport Portfolio from './Portfolio';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Portfolio />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}