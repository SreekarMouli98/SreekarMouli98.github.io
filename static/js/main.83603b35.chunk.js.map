{"version":3,"sources":["Portfolio/Context/index.js","Portfolio/Components/CustomBackdrop/index.js","Portfolio/Components/Nav/index.js","Portfolio/Components/Home/index.js","Portfolio/Components/About/index.js","Portfolio/Components/Projects/Project.js","Portfolio/Components/Projects/index.js","Portfolio/Components/Contact/index.js","Portfolio/Components/Footer/index.js","Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","CustomBackdrop","withStyles","root","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","invisible","Backdrop","Home","context","useContext","classes","makeStyles","navItem","fontSize","modalMenu","width","MODEL_MENU_WIDTH","height","MODEL_MENU_HEIGHT","menuIcon","transform","navbar","windowSize","backdropRoot","menuItem","animation","useStyles","useState","menuOpen","setMenuOpen","menuItems","handleMenuClick","useEffect","AppBar","className","color","elevation","Tabs","centered","value","indexOf","view","onChange","event","newValue","changeView","indicatorColor","map","Tab","key","label","Fragment","IconButton","onClick","Modal","open","BackdropComponent","List","component","index","ListItem","button","ListItemText","primaryTypographyProps","align","variant","gutterBottom","homeContent","HOME_CONTENT_WIDTH","HOME_CONTENT_HEIGHT","Container","Typography","About","calcPadding","percentReduced","content","paddingLeft","paddingRight","Toolbar","Link","href","target","rel","Project","props","project","transition","border","subProject","icon","openLinkInNewTab","link","window","getHeaderLinks","accessLink","Tooltip","title","size","githubLink","gitlabLink","Card","CardHeader","name","subheader","desc","action","CardContent","type","Grid","container","justify","spacing","collection","item","xs","CardActions","technologies","technology","getTechnologyIcon","Projects","getProjectSize","data","projects","Contact","direction","Footer","footer","buttonNav","theme","createMuiTheme","palette","primary","main","secondary","Portfolio","setView","innerWidth","innerHeight","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","ThemeProvider","Provider","newView","Nav","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"m/EAIeA,EAFCC,IAAMC,cAAc,M,yCCoBrBC,EAnBQC,YAAW,CAChCC,KAAM,CACJC,QAAS,EACTC,SAAU,QACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,EACPC,OAAQ,EACRC,IAAK,EACLC,KAAM,EACNC,gBAAiB,qBACjBC,wBAAyB,eAE3BC,UAAW,CACTF,gBAAiB,gBAfEX,CAiBpBc,KCkJYC,MA1Jf,WACE,IAAMC,EAAUC,qBAAWrB,GAkDrBsB,EAhDYC,YAAW,CAC3BC,QAAS,CACPC,SAAU,QAEZC,UAAW,CACTnB,SAAU,QACVoB,MAAK,UAbe,IAaf,MACLb,KAAI,qBAAoBc,IAApB,OACJC,OAAM,UAdc,IAcd,MACNhB,IAAG,qBAAqBiB,IAArB,QAELC,SAAU,CACRxB,SAAU,QACVM,IAAU,OACVC,KAAU,OACV,UAAW,CACTkB,UAAW,eAGfC,OAAQ,CACNlB,gBAAiBK,EAAQc,WAAWP,MAzBZ,IAyB4C,UAAY,UAChFE,OAAQ,QAEVM,aAAc,CACZpB,gBAAiB,OAEnB,sBAAuB,CACrB,KAAM,CACJiB,UAAW,cAEb,MAAO,CACLA,UAAW,cAEb,MAAO,CACLA,UAAW,cAEb,MAAO,CACLA,UAAW,cAEb,OAAQ,CACNA,UAAW,aAGfI,SAAU,CACRC,UAAW,oBAICC,GAnDF,EAoDkBC,oBAAS,GApD3B,mBAoDPC,EApDO,KAoDGC,EApDH,KAsDRC,EAAY,CAChB,OACA,QACA,WACA,WAOIC,EAAkB,WACtBF,GAAaD,IAcf,OANAI,qBAAU,WACJxB,EAAQc,WAAWP,OA7EG,KA6E+Ba,GACvDC,GAAY,KAEb,CAACrB,EAAQc,WAAWP,QAGrB,kBAACkB,EAAA,EAAD,CACEC,UAAWxB,EAAQW,OACnBc,MAAM,cACNC,UAAW,GAEV5B,EAAQc,WAAWP,OAxFI,KAyFtB,kBAACsB,EAAA,EAAD,CACEC,UAAQ,EACRC,MAAOT,EAAUU,QAAQhC,EAAQiC,MACjCC,SA7BgB,SAACC,EAAOC,GAC9BpC,EAAQqC,WAAWf,EAAUc,KA6BvBE,eAAe,aAEdhB,EAAUiB,KAAI,SAACvB,GAAD,OACb,kBAACwB,EAAA,EAAD,CACEC,IAAKzB,EACL0B,MAAO1B,EACPU,UAAWxB,EAAQE,cAK1BJ,EAAQc,WAAWP,MAxGI,KAyGtB,kBAAC,IAAMoC,SAAP,MACIvB,GACA,kBAACwB,EAAA,EAAD,CACElB,UAAWxB,EAAQS,SACnBkC,QAAStB,GAET,kBAAC,IAAD,OAGJ,kBAACuB,EAAA,EAAD,CACEC,KAAM3B,EACN4B,kBAAmBjE,GAEnB,kBAAC,IAAM4D,SAAP,KACE,kBAACC,EAAA,EAAD,CACElB,UAAWxB,EAAQS,SACnBkC,QAAStB,GAET,kBAAC,IAAD,OAEF,yBAAKG,UAAWxB,EAAQI,WACtB,kBAAC2C,EAAA,EAAD,CAAMC,UAAU,OACb5B,EAAUiB,KAAI,SAACvB,EAAUmC,GAAX,OACb,kBAACC,EAAA,EAAD,CACEX,IAAKzB,EACLqC,QAAM,EACNhE,WAAW,SACXwD,QAAS,kBA7DAT,EA6D0Be,EA5DrDnD,EAAQqC,WAAWf,EAAUc,SAC7Bf,GAAY,GAFc,IAACe,IA+DT,kBAACkB,EAAA,EAAD,CACEC,uBAAwB,CACtBC,MAAO,SACPC,QAAS,KACTC,cAAc,GAEhBhC,UAAWxB,EAAQc,UAElBA,c,iBC9FVjB,MAjDf,WACE,IAAMC,EAAUC,qBAAWrB,GAkBrBsB,EAXYC,YAAW,CAC3BwD,YAAa,CACXxE,SAAU,QACVoB,MAAK,UAfiB,IAejB,MACLb,KAAI,qBAAoBkE,MAApB,OACJnD,OAAM,UAhBgB,IAgBhB,MACNhB,IAAG,qBAAqBoE,IAArB,OACHjD,UAAU,SAAD,OAAWZ,EAAQc,WAAWP,MAjBf,IAiB+C,EAVlE,GAPmB,IAMUP,EAAQc,WAAWP,OAN7B,IAiBf,OAIGW,GAEhB,OACE,kBAAC,IAAMyB,SAAP,KACE,kBAACmB,EAAA,EAAD,KACE,yBAAKpC,UAAWxB,EAAQyD,aACtB,kBAACI,EAAA,EAAD,CACEP,MAAM,OACNC,QAAQ,MAFV,OAMA,kBAACM,EAAA,EAAD,CACEP,MAAM,SACNC,QAAQ,MAFV,iBAMA,kBAACM,EAAA,EAAD,CACEP,MAAM,QACNC,QAAQ,MAFV,4B,kBCgBKO,MApDf,WACE,IAAMhE,EAAUC,qBAAWrB,GAErBqF,EAAc,WAClB,IAAIC,GARsB,IAQoBlE,EAAQc,WAAWP,OAA3C,IAAoF,IAG1G,MADW,UATK,KAQmC2D,EAAiB,IAAhD,IAPJ,IAQL,OAWPhE,EAPYC,YAAW,CAC3BgE,QAAS,CACPC,YAAcpE,EAAQc,WAAWP,MAhBT,IAgBV,UAfA,IAeA,MAAuE0D,IACrFI,aAAcrE,EAAQc,WAAWP,MAjBT,IAiBV,UAhBA,IAgBA,MAAuE0D,MAIzE/C,GAEhB,OACE,kBAAC,IAAMyB,SAAP,KACE,kBAAC2B,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,KACG9D,EAAQc,WAAWP,OA5BE,IA6BpB,kBAAC,IAAMoC,SAAP,KACE,kBAACoB,EAAA,EAAD,CAAYN,QAAQ,KAAKD,MAAM,UAA/B,SAGA,kBAACc,EAAA,EAAD,OAGF,kBAACA,EAAA,EAAD,MAEF,yBAAK5C,UAAWxB,EAAQiE,SACtB,kBAACJ,EAAA,EAAD,CAAYN,QAAQ,KAAKC,cAAY,GAArC,0BAGA,6BACA,kBAACK,EAAA,EAAD,CAAYN,QAAQ,KAAKC,cAAY,GAArC,+DAC8D,kBAACa,EAAA,EAAD,CAAMC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,YAA3E,WAD9D,mLAGA,6BACA,kBAACX,EAAA,EAAD,CAAYN,QAAQ,KAAKC,cAAY,GAArC,qTAKJ,kBAACY,EAAA,EAAD,Q,sGCmHSK,MAvJf,SAAiBC,GAAQ,IACfC,EAAYD,EAAZC,QA0BF3E,EAxBYC,YAAW,CAC3B0E,QAAS,CACPpE,OAAQ,QACRqE,WAAY,QACZC,OAAQ,oBACRpF,gBAAiB,UACjB,UAAW,CACTiB,UAAW,eACXjB,gBAAiB,YAGrBqF,WAAY,CACVF,WAAY,QACZ,UAAW,CACTlE,UAAW,iBAGfqE,KAAM,CACJ,UAAW,CACTrE,UAAW,iBAKDM,GAEVgE,EAAmB,SAAAC,GAAI,OAAIC,OAAOrC,KAAKoC,IA8BvCE,EAAiB,SAAAR,GACrB,OACE,kBAAC,IAAMlC,SAAP,KACGkC,EAAQS,YACP,kBAACC,EAAA,EAAD,CAASC,MAAM,QACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBQ,KAAK,QACL5C,QAAS,kBAAMqC,EAAiBL,EAAQS,cAExC,kBAAC,IAAD,QAILT,EAAQa,YACP,kBAACH,EAAA,EAAD,CAASC,MAAM,UACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBQ,KAAK,QACL5C,QAAS,kBAAMqC,EAAiBL,EAAQa,cAExC,kBAAC,IAAD,QAILb,EAAQc,YACP,kBAACJ,EAAA,EAAD,CAASC,MAAM,UACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBQ,KAAK,QACL5C,QAAS,kBAAMqC,EAAiBL,EAAQc,cAExC,kBAAC,IAAD,UAQZ,OACE,kBAAC,IAAMhD,SAAP,KACE,kBAACiD,EAAA,EAAD,CAAMlE,UAAWxB,EAAQ2E,SACvB,kBAACgB,EAAA,EAAD,CACEL,MAAOX,EAAQiB,KACfC,UAAWlB,EAAQmB,KACnBC,OAAQZ,EAAeR,KAEzB,kBAACqB,EAAA,EAAD,KACoB,eAAjBrB,EAAQsB,MACP,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRC,QAAS,GAER1B,EAAQ2B,WAAWjE,KAAI,SAACyC,EAAY7B,GAAb,OACtB,kBAACiD,EAAA,EAAD,CACEK,MAAI,EACJhE,IAAKU,EACLuD,GAAI,GAEJ,kBAACd,EAAA,EAAD,CAAMlE,UAAWxB,EAAQ8E,YACvB,kBAACa,EAAA,EAAD,CACEE,UAAWf,EAAWc,KACtBG,OAAQZ,EAAeL,YAQrC,kBAAC2B,EAAA,EAAD,KACG9B,EAAQ+B,aAAarE,KAAI,SAACsE,EAAY1D,GAAb,OACxB,kBAACoC,EAAA,EAAD,CACE9C,IAAKU,EACLqC,MAAOqB,GAEP,kBAACjE,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBQ,KAAK,SA5GO,SAAAoB,GACxB,MAAmB,eAAfA,EACK,kBAAC,IAAD,MACiB,QAAfA,EACF,kBAAC,IAAD,MACiB,WAAfA,EACF,kBAAC,IAAD,MACiB,WAAfA,EACF,kBAAC,IAAD,MACiB,YAAfA,EACF,kBAAC,IAAD,MACiB,WAAfA,EACF,kBAAC,IAAD,MACiB,YAAfA,EACF,kBAAC,IAAD,MACiB,UAAfA,EACF,kBAAC,IAAD,MACiB,aAAfA,EACF,kBAAC,IAAD,MACiB,UAAfA,EACF,kBAAC,IAAD,MACiB,UAAfA,EACF,kBAAC,IAAD,MAEA,kBAAC,IAAD,MAsFIC,CAAkBD,YCzGpBE,MAjDf,WACE,IAAM/G,EAAUC,qBAAWrB,GAErBoI,EAAiB,WACrB,IAAIzG,EAAQP,EAAQc,WAAWP,MAC/B,OAAIA,EAAQ,IACH,GACEA,EAAQ,IACV,EAEA,GAIX,OACE,kBAAC,IAAMoC,SAAP,KACE,kBAAC2B,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,KACG9D,EAAQc,WAAWP,MApBE,IAqBpB,kBAAC,IAAMoC,SAAP,KACE,kBAACoB,EAAA,EAAD,CAAYN,QAAQ,KAAKD,MAAM,UAA/B,YAGA,kBAACc,EAAA,EAAD,OAGF,kBAACA,EAAA,EAAD,MAEF,kBAAC8B,EAAA,EAAD,CACEC,WAAS,EACTE,QAAS,GAERU,EAAKC,SAAS3E,KAAI,SAACsC,EAAS1B,GAAV,OACjB,kBAACiD,EAAA,EAAD,CACEK,MAAI,EACJhE,IAAKU,EACLuD,GAAIM,KAEJ,kBAAC,EAAD,CAASnC,QAASA,IAClB,kCAIN,kBAACP,EAAA,EAAD,SCwBO6C,MAjEf,WACE,IAAMnH,EAAUC,qBAAWrB,GAErBqF,EAAc,WAClB,IAAIC,GARsB,IAQoBlE,EAAQc,WAAWP,OAA3C,IAAoF,IAG1G,MADW,UATK,KAQmC2D,EAAiB,IAAhD,IAPJ,IAQL,OAUPhE,EANYC,YAAW,CAC3BgE,QAAS,CACPC,YAAcpE,EAAQc,WAAWP,MAhBT,IAgBV,UAfA,IAeA,MAAuE0D,IACrFI,aAAcrE,EAAQc,WAAWP,MAjBT,IAiBV,UAhBA,IAgBA,MAAuE0D,MAGzE/C,GAEhB,OACE,kBAAC,IAAMyB,SAAP,KACE,kBAAC2B,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,KACG9D,EAAQc,WAAWP,OA3BE,IA4BpB,kBAAC,IAAMoC,SAAP,KACE,kBAACoB,EAAA,EAAD,CAAYN,QAAQ,KAAKD,MAAM,UAA/B,WAGA,kBAACc,EAAA,EAAD,OAGF,kBAACA,EAAA,EAAD,MAEF,yBAAK5C,UAAWxB,EAAQiE,SACtB,kBAACJ,EAAA,EAAD,CACEN,QAAQ,KACRD,MAAM,SACNE,cAAY,GAHd,2CAQF,kBAACY,EAAA,EAAD,OAEF,kBAAC8B,EAAA,EAAD,CACEC,WAAS,EACTe,UAAU,SACV/H,WAAW,SACXiH,QAAQ,gBAER,kBAACF,EAAA,EAAD,CAAMK,MAAI,GACR,kBAAC1C,EAAA,EAAD,CAAYN,QAAQ,UAApB,SAGA,8BAEF,kBAAC2C,EAAA,EAAD,CAAMK,MAAI,GACR,kBAAC1C,EAAA,EAAD,CAAYN,QAAQ,UAClB,kBAACc,EAAA,EAAD,CAAMC,KAAK,sCAAX,oCCOG6C,MA9Df,WACE,IAAMrH,EAAUC,qBAAWrB,GAyBrBsB,EAvBYC,YAAW,CAC3BmH,OAAQ,CACNnI,SAAiB,QACjBK,OAAiB,EACjBE,KAAiB,EACjBH,MAAiB,EACjBI,gBAAiBK,EAAQc,WAAWP,MAXZ,IAW4C,UAAY,UAChFE,OAAiB,QAEnB8G,UAAW,CACTpI,SAAU,QACVoB,MAAU,QACVf,OAAU,MACVE,KAAI,oBAENuF,KAAM,CACJH,WAAY,QACZ,UAAY,CACVlE,UAAW,iBAKDM,GAEVgE,EAAmB,SAAAC,GAAI,OAAIC,OAAOrC,KAAKoC,IAE7C,OACE,yBAAKzD,UAAWxB,EAAQoH,QACtB,yBAAK5F,UAAWxB,EAAQqH,WACtB,kBAAChC,EAAA,EAAD,CAASC,MAAM,UACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBpC,QAAS,kBAAMqC,EAAiB,kCAEhC,kBAAC,IAAD,QAGJ,kBAACK,EAAA,EAAD,CAASC,MAAM,kBACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBpC,QAAS,kBAAMqC,EAAiB,2DAEhC,kBAAC,IAAD,QAGJ,kBAACK,EAAA,EAAD,CAASC,MAAM,YACb,kBAAC5C,EAAA,EAAD,CACElB,UAAWxB,EAAQ+E,KACnBpC,QAAS,kBAAMqC,EAAiB,2CAEhC,kBAAC,IAAD,W,iBC3DNsC,G,MAAQC,YAAe,CAC3BC,QAAS,CACPvB,KAAM,OACNwB,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,eAoDGE,MA1Bf,SAAmBlD,GAAQ,IAAD,EACAzD,mBAAS,QADT,mBACjBc,EADiB,KACX8F,EADW,KAElBjH,EAvBR,WAA0B,IAAD,EACaK,mBAAS,CAC3CZ,MAAQ6E,OAAO4C,WACfvH,OAAQ2E,OAAO6C,cAHM,mBAChBnH,EADgB,KACJoH,EADI,KAkBvB,OAZA1G,qBAAU,WACR,IAAM2G,EAAe,WACnBD,EAAc,CACZ3H,MAAQ6E,OAAO4C,WACfvH,OAAQ2E,OAAO6C,eAKnB,OAFA7C,OAAOgD,iBAAiB,SAAUD,GAClCA,IACO,kBAAM/C,OAAOiD,oBAAoB,SAAUF,MACjD,IAEIrH,EAKYwH,GAInB,OACE,kBAAC,IAAM3F,SAAP,KACE,kBAAC4F,EAAA,EAAD,CAAef,MAAOA,GACpB,kBAAC,EAAQgB,SAAT,CAAkBzG,MAAO,CACvBE,OACAI,WAPW,SAAAoG,GAAO,OAAIV,EAAQU,IAQ9B3H,eAEA,kBAAC4H,EAAD,MACU,SAATzG,GAAmB,kBAAC,EAAD,MACV,UAATA,GAAoB,kBAAC,EAAD,MACX,aAATA,GAAuB,kBAAC,EAAD,MACd,YAATA,GAAsB,kBAAC,EAAD,MACvB,kBAAC,EAAD,UChDK0G,MARf,WACE,OACE,kBAAC,IAAMhG,SAAP,KACE,kBAAC,EAAD,QCMciG,QACW,cAA7BxD,OAAOyD,SAASC,UAEe,UAA7B1D,OAAOyD,SAASC,UAEhB1D,OAAOyD,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.83603b35.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext(null);\n\nexport default Context;","import { Backdrop } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst CustomBackdrop = withStyles({\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n    WebkitTapHighlightColor: 'transparent',\n  },\n  invisible: {\n    backgroundColor: 'transparent',\n  },\n})(Backdrop);\n\nexport default CustomBackdrop;","import React, { useContext, useEffect, useState } from 'react';\nimport { AppBar, IconButton, List, ListItem, ListItemText, Modal, Tab, Tabs } from '@material-ui/core';\nimport Context from '../../Context';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BiMenu as MenuIcon } from 'react-icons/bi';\nimport { AiOutlineClose as CloseIcon } from 'react-icons/ai';\nimport CustomBackdrop from '../CustomBackdrop';\n\nconst MODEL_MENU_WIDTH  = 200;\nconst MODEL_MENU_HEIGHT = 250;\nconst MAX_MOBILE_VIEW_WIDTH = 670;\n\nfunction Home() {\n  const context = useContext(Context);\n\n  const useStyles = makeStyles({\n    navItem: {\n      fontSize: '17px',\n    },\n    modalMenu: {\n      position: 'fixed',\n      width   : `${MODEL_MENU_WIDTH}px`,\n      left    : `calc(50% - ${MODEL_MENU_WIDTH / 2}px)`,\n      height  : `${MODEL_MENU_HEIGHT}px`,\n      top     : `calc(50% - ${MODEL_MENU_HEIGHT / 2}px)`,\n    },\n    menuIcon: {\n      position: 'fixed',\n      top     : '10px',\n      left    : '10px',\n      '&:hover': {\n        transform: 'scale(1.5)'\n      }\n    },\n    navbar: {\n      backgroundColor: context.windowSize.width > MAX_MOBILE_VIEW_WIDTH ? '#424242' : '#353535',\n      height: '60px',\n    },\n    backdropRoot: {\n      backgroundColor: 'red',\n    },\n    '@keyframes loadMenu': {\n      '0%': {\n        transform: 'scale(0.6)'\n      },\n      '25%': {\n        transform: 'scale(0.7)'\n      },\n      '50%': {\n        transform: 'scale(0.8)'\n      },\n      '75%': {\n        transform: 'scale(0.9)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    },\n    menuItem: {\n      animation: '$loadMenu 100ms'\n    },\n  });\n\n  const classes = useStyles();\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const menuItems = [\n    'HOME',\n    'ABOUT',\n    'PROJECTS',\n    'CONTACT',\n  ];\n\n  const handleTabChange = (event, newValue) => {\n    context.changeView(menuItems[newValue]);\n  };\n\n  const handleMenuClick = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const handleMenuItemClick = (newValue) => {\n    context.changeView(menuItems[newValue]);\n    setMenuOpen(false);\n  };\n\n  useEffect(() => {\n    if (context.windowSize.width >= MAX_MOBILE_VIEW_WIDTH && menuOpen) {\n      setMenuOpen(false);\n    }\n  }, [context.windowSize.width]);\n\n  return (\n    <AppBar\n      className={classes.navbar}\n      color='transparent'\n      elevation={0}\n    >\n      {context.windowSize.width >= MAX_MOBILE_VIEW_WIDTH && (\n        <Tabs\n          centered\n          value={menuItems.indexOf(context.view)}\n          onChange={handleTabChange}\n          indicatorColor='secondary'\n        >\n          {menuItems.map((menuItem) => (\n            <Tab\n              key={menuItem}\n              label={menuItem}\n              className={classes.navItem}\n            />\n          ))}\n        </Tabs>\n      )}\n      {context.windowSize.width < MAX_MOBILE_VIEW_WIDTH && (\n        <React.Fragment>\n          {!menuOpen && (\n            <IconButton\n              className={classes.menuIcon}\n              onClick={handleMenuClick}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Modal\n            open={menuOpen}\n            BackdropComponent={CustomBackdrop}\n          >\n            <React.Fragment>\n              <IconButton\n                className={classes.menuIcon}\n                onClick={handleMenuClick}\n              >\n                <CloseIcon />\n              </IconButton>\n              <div className={classes.modalMenu}>\n                <List component='nav'>\n                  {menuItems.map((menuItem, index) => (\n                    <ListItem\n                      key={menuItem}\n                      button\n                      alignItems='center'\n                      onClick={() => handleMenuItemClick(index)}\n                    >\n                      <ListItemText\n                        primaryTypographyProps={{\n                          align: 'center',\n                          variant: 'h5',\n                          gutterBottom: true\n                        }}\n                        className={classes.menuItem}\n                      >\n                        {menuItem}\n                      </ListItemText>\n                    </ListItem>\n                  ))}\n                </List>\n              </div>\n            </React.Fragment>\n          </Modal>\n        </React.Fragment>\n      )}\n    </AppBar>\n  );\n}\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport { Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../../Context';\n\nconst HOME_CONTENT_WIDTH  = 573;\nconst HOME_CONTENT_HEIGHT = 200;\nconst MAX_MOBILE_VIEW_WIDTH = 670;\n\nfunction Home() {\n  const context = useContext(Context);\n\n  const calcScale = () => {\n    let diff = (MAX_MOBILE_VIEW_WIDTH - context.windowSize.width) / (MAX_MOBILE_VIEW_WIDTH);\n    return 1 - diff;\n  };\n\n  const useStyles = makeStyles({\n    homeContent: {\n      position: 'fixed',\n      width   : `${HOME_CONTENT_WIDTH}px`,\n      left    : `calc(50% - ${HOME_CONTENT_WIDTH / 2}px)`,\n      height  : `${HOME_CONTENT_HEIGHT}px`,\n      top     : `calc(50% - ${HOME_CONTENT_HEIGHT / 2}px)`,\n      transform: `scale(${context.windowSize.width > MAX_MOBILE_VIEW_WIDTH ? 1 : calcScale()})`\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Container>\n        <div className={classes.homeContent}>\n          <Typography\n            align='left'\n            variant='h5'\n          >\n            I'm\n          </Typography>\n          <Typography\n            align='center'\n            variant='h1'\n          >\n            Sreekar Mouli\n          </Typography>\n          <Typography\n            align='right'\n            variant='h5'\n          >\n            a Software Developer\n          </Typography>\n        </div>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport { Container, Link, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../../Context';\n\nconst MAX_MOBILE_VIEW_WIDTH = 670;\nconst REDUCE_PADDING_WIDTH  = 1000;\nconst MAX_PADDING = 150;\nconst MIN_PADDING = 10;\n\nfunction About() {\n  const context = useContext(Context);\n\n  const calcPadding = () => {\n    let percentReduced = ((REDUCE_PADDING_WIDTH - context.windowSize.width) / (REDUCE_PADDING_WIDTH - 300)) * 100;\n    let paddingDelta = ((MAX_PADDING - MIN_PADDING) * (percentReduced / 100)) + MIN_PADDING;\n    let padding = `${MAX_PADDING - paddingDelta}px`;\n    return padding;\n  };\n\n  const useStyles = makeStyles({\n    content: {\n      paddingLeft : context.windowSize.width > REDUCE_PADDING_WIDTH ? `${MAX_PADDING}px` : calcPadding(),\n      paddingRight: context.windowSize.width > REDUCE_PADDING_WIDTH ? `${MAX_PADDING}px` : calcPadding(),\n    },\n  });\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Toolbar />\n      <Container>\n        {context.windowSize.width <= MAX_MOBILE_VIEW_WIDTH ? (\n          <React.Fragment>\n            <Typography variant='h3' align='center'>\n              ABOUT\n            </Typography>\n            <Toolbar />\n          </React.Fragment>\n        ) : (\n          <Toolbar /> \n        )}\n        <div className={classes.content}>\n          <Typography variant='h6' gutterBottom>\n            Hi, I'm Sreekar Mouli.\n          </Typography>\n          <br />\n          <Typography variant='h6' gutterBottom>\n            I'm an enthusiastic Software Developer currently working at <Link href='https://www.linkedin.com/company/kore-inc' target='_blank' rel='noopener'>Kore.ai</Link> in Hyderabad, India. For the company, I have developed several features like Digital Views, Digital Forms and have also build a new Application called Workflows from scratch.\n          </Typography>\n          <br />\n          <Typography variant='h6' gutterBottom>\n            As a kid, I was really interested in computers and technology in general. I was really suprised when I came across programming. That fact that you can build a software which does what you want it to do really interests me. Since then, I have been building several projects and learning new technologies.\n          </Typography>\n        </div>\n      </Container>\n      <Toolbar />\n    </React.Fragment>\n  )\n}\n\nexport default About;","import React from 'react';\nimport { Card, CardActions, CardContent, CardHeader, Grid, IconButton, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { AiFillGithub as GithubIcon } from 'react-icons/ai';\nimport { MdOpenInNew as OpenIcon } from 'react-icons/md';\nimport { \n  SiJavascript as JSIcon,\n  SiNpm as NPMIcon,\n  SiPython as PyIcon,\n  SiDjango as DjangoIcon,\n  SiReact as ReactIcon,\n  SiMongodb as MongoDBIcon,\n  SiRedis as RedisIcon,\n  SiRabbitmq as RabbitMQIcon,\n  SiNginx as NginxIcon,\n  SiMysql as MySQLIcon\n} from 'react-icons/si';\nimport { RiFileUnknowFill as UnknwownIcon } from 'react-icons/ri';\nimport { IoLogoGitlab as GitlabIcon } from 'react-icons/io5';\nimport { FaNodeJs as NodeJSIcon } from 'react-icons/fa';\n\nfunction Project(props) {\n  const { project } = props;\n\n  const useStyles = makeStyles({\n    project: {\n      height: '330px',\n      transition: '250ms',\n      border: '2px solid #ef6c00',\n      backgroundColor: '#353535',\n      '&:hover': {\n        transform: 'scale(1.025)',\n        backgroundColor: '#212121',\n      }\n    },\n    subProject: {\n      transition: '250ms',\n      '&:hover': {\n        transform: 'scale(1.025)'\n      }\n    },\n    icon: {\n      '&:hover': {\n        transform: 'scale(1.05)'\n      }\n    }\n  });\n\n  const classes = useStyles();\n\n  const openLinkInNewTab = link => window.open(link);\n\n  const getTechnologyIcon = technology => {\n    if (technology === 'JavaScript') {\n      return <JSIcon />\n    } else if (technology === 'NPM') {\n      return <NPMIcon />\n    } else if (technology === 'Python') {\n      return <PyIcon />\n    } else if (technology === 'Django') {\n      return <DjangoIcon />\n    } else if (technology === 'ReactJS') {\n      return <ReactIcon />\n    } else if (technology === 'NodeJS') {\n      return <NodeJSIcon />\n    } else if (technology === 'MongoDB') {\n      return <MongoDBIcon />\n    } else if (technology === 'Redis') {\n      return <RedisIcon />\n    } else if (technology === 'RabbitMQ') {\n      return <RabbitMQIcon />\n    } else if (technology === 'Nginx') {\n      return <NginxIcon />\n    } else if (technology === 'MySQL') {\n      return <MySQLIcon />\n    } else {\n      return <UnknwownIcon />\n    }\n  };\n\n  const getHeaderLinks = project => {\n    return (\n      <React.Fragment>\n        {project.accessLink && (\n          <Tooltip title='Open'>\n            <IconButton\n              className={classes.icon}\n              size='small'\n              onClick={() => openLinkInNewTab(project.accessLink)}\n            >\n              <OpenIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {project.githubLink && (\n          <Tooltip title='Github'>\n            <IconButton\n              className={classes.icon} \n              size='small'\n              onClick={() => openLinkInNewTab(project.githubLink)}\n            >\n              <GithubIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {project.gitlabLink && (\n          <Tooltip title='Gitlab'>\n            <IconButton\n              className={classes.icon} \n              size='small'\n              onClick={() => openLinkInNewTab(project.gitlabLink)}\n            >\n              <GitlabIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </React.Fragment>\n    )\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={classes.project}>\n        <CardHeader\n          title={project.name}\n          subheader={project.desc}\n          action={getHeaderLinks(project)}\n        />\n        <CardContent>\n          {project.type === 'collection' && (\n            <Grid\n              container\n              justify='center'\n              spacing={1}\n            >\n              {project.collection.map((subProject, index) => (\n                <Grid\n                  item\n                  key={index}\n                  xs={6}\n                >\n                  <Card className={classes.subProject}>\n                    <CardHeader\n                      subheader={subProject.name}\n                      action={getHeaderLinks(subProject)}\n                    />\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </CardContent>\n        <CardActions>\n          {project.technologies.map((technology, index) => (\n            <Tooltip\n              key={index}\n              title={technology}\n            >\n              <IconButton\n                className={classes.icon}\n                size='small'\n              >\n                {getTechnologyIcon(technology)}\n              </IconButton>\n            </Tooltip>\n          ))}\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nexport default Project;","import React, { useContext } from 'react';\nimport { Container, Grid, Toolbar, Typography } from '@material-ui/core';\nimport data from '../../data.json';\nimport Project from './Project';\nimport Context from '../../Context';\n\nconst MAX_MOBILE_VIEW_WIDTH = 670;\n\nfunction Projects() {\n  const context = useContext(Context);\n\n  const getProjectSize = () => {\n    let width = context.windowSize.width;\n    if (width < 570) {\n      return 12;\n    } else if (width < 880) {\n      return 6;\n    } else {\n      return 4;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Toolbar />\n      <Container>\n        {context.windowSize.width < MAX_MOBILE_VIEW_WIDTH ? (\n          <React.Fragment>\n            <Typography variant='h3' align='center'>\n              PROJECTS\n            </Typography>\n            <Toolbar />\n          </React.Fragment>\n        ) : (\n          <Toolbar />\n        )}\n        <Grid\n          container\n          spacing={2}\n        >\n          {data.projects.map((project, index) => \n            <Grid\n              item\n              key={index}\n              xs={getProjectSize()}\n            >\n              <Project project={project}/>\n              <br />\n            </Grid>\n          )}\n        </Grid>\n        <Toolbar />\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Projects;","import React, { useContext } from 'react';\nimport { Container, Grid, Typography, Link, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../../Context';\n\nconst MAX_MOBILE_VIEW_WIDTH = 670;\nconst REDUCE_PADDING_WIDTH  = 1000;\nconst MAX_PADDING = 150;\nconst MIN_PADDING = 10;\n\nfunction Contact() {\n  const context = useContext(Context);\n\n  const calcPadding = () => {\n    let percentReduced = ((REDUCE_PADDING_WIDTH - context.windowSize.width) / (REDUCE_PADDING_WIDTH - 300)) * 100;\n    let paddingDelta = ((MAX_PADDING - MIN_PADDING) * (percentReduced / 100)) + MIN_PADDING;\n    let padding = `${MAX_PADDING - paddingDelta}px`;\n    return padding;\n  };\n\n  const useStyles = makeStyles({\n    content: {\n      paddingLeft : context.windowSize.width > REDUCE_PADDING_WIDTH ? `${MAX_PADDING}px` : calcPadding(),\n      paddingRight: context.windowSize.width > REDUCE_PADDING_WIDTH ? `${MAX_PADDING}px` : calcPadding(),\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Toolbar />\n      <Container>\n        {context.windowSize.width <= MAX_MOBILE_VIEW_WIDTH ? (\n          <React.Fragment>\n            <Typography variant='h3' align='center'>\n              CONTACT\n            </Typography>\n            <Toolbar />\n          </React.Fragment>\n        ) : (\n          <Toolbar />\n        )}\n        <div className={classes.content}>\n          <Typography\n            variant='h5'\n            align='center'\n            gutterBottom\n          >\n            You can reach out to me over my email.\n          </Typography>\n        </div>\n        <Toolbar />\n      </Container>\n      <Grid\n        container\n        direction='column'\n        alignItems='center'\n        justify='space-evenly'\n      >\n        <Grid item>\n          <Typography variant='button'>\n            EMAIL\n          </Typography>\n          <hr />\n        </Grid>\n        <Grid item>\n          <Typography variant='button'>\n            <Link href='mailto:sreekar.mouli1998@gmail.com'>sreekar.mouli1998@gmail.com</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default Contact;","import React, { useContext } from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport {\n  RiGithubFill as GithubIcon,\n  RiStackOverflowLine as StackOverflowIcon,\n  RiLinkedinBoxFill as LinkedInIcon,\n} from 'react-icons/ri';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Context from '../../Context';\n\nconst MAX_MOBILE_VIEW_WIDTH = 670;\n\nfunction Footer() {\n  const context = useContext(Context);\n\n  const useStyles = makeStyles({\n    footer: {\n      position       : 'fixed',\n      bottom         : 0,\n      left           : 0,\n      right          : 0,\n      backgroundColor: context.windowSize.width > MAX_MOBILE_VIEW_WIDTH ? '#424242' : '#353535',\n      height         : '50px',\n    },\n    buttonNav: {\n      position: 'fixed',\n      width   : '150px',\n      bottom  : '5px',\n      left    : `calc(50% - 75px)`,\n    },\n    icon: {\n      transition: '100ms',\n      '&:hover' : {\n        transform: 'scale(1.05)'\n      }\n    }\n  });\n\n  const classes = useStyles();\n\n  const openLinkInNewTab = link => window.open(link);\n\n  return (\n    <div className={classes.footer}>\n      <div className={classes.buttonNav}>\n        <Tooltip title='Github'>\n          <IconButton\n            className={classes.icon}\n            onClick={() => openLinkInNewTab('https://github.com/mouli2105')}\n          >\n            <GithubIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Stack Overflow'>\n          <IconButton\n            className={classes.icon}\n            onClick={() => openLinkInNewTab('https://stackoverflow.com/users/8208804/sreekar-mouli')}\n          >\n            <StackOverflowIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='LinkedIn'>\n          <IconButton\n            className={classes.icon}\n            onClick={() => openLinkInNewTab('https://www.linkedin.com/in/mouli2105')}\n          >\n            <LinkedInIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport { Nav, Home, About, Projects, Contact, Footer } from './Components';\nimport Context from './Context';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport './style.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ffcc80',\n    },\n    secondary: {\n      main: '#ef6c00',\n    },\n  },\n});\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width : window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width : window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nfunction Portfolio(props) {\n  const [view, setView] = useState('HOME');\n  const windowSize = useWindowSize();\n\n  const changeView = newView => setView(newView);\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <Context.Provider value={{\n          view,\n          changeView,\n          windowSize,\n        }}>\n          <Nav />\n          {view === 'HOME' && <Home />}\n          {view === 'ABOUT' && <About />}\n          {view === 'PROJECTS' && <Projects />}\n          {view === 'CONTACT' && <Contact />}\n          <Footer />\n        </Context.Provider>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default Portfolio;","import React from 'react';\nimport Portfolio from './Portfolio';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Portfolio />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}